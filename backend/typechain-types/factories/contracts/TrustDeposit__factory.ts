/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TrustDeposit,
  TrustDepositInterface,
} from "../../contracts/TrustDeposit";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_backendSigner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_arbitrator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyDisputed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShare",
    type: "error",
  },
  {
    inputs: [],
    name: "LeaseAlreadyActive",
    type: "error",
  },
  {
    inputs: [],
    name: "LeaseNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "NotArbitrator",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBackendSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotDisputed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotParticipant",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTenant",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newArbitrator",
        type: "address",
      },
    ],
    name: "ArbitratorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaseId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "landlord",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositHeld",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaseId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tenantShare",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "landlordShare",
        type: "uint256",
      },
    ],
    name: "DepositReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaseId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DisputeEscalated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaseId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tenantShare",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "landlordShare",
        type: "uint256",
      },
    ],
    name: "DisputeResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "arbitrator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "backendSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaseId",
        type: "bytes32",
      },
    ],
    name: "escalateDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaseId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "landlord",
        type: "address",
      },
    ],
    name: "holdDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "leases",
    outputs: [
      {
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        internalType: "address",
        name: "landlord",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "disputed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaseId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tenantShareWei",
        type: "uint256",
      },
    ],
    name: "releaseDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaseId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tenantShareWei",
        type: "uint256",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newArb",
        type: "address",
      },
    ],
    name: "setArbitrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newSigner",
        type: "address",
      },
    ],
    name: "setBackendSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516116813803806116818339818101604052810190610032919061026c565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c91906102bb565b60405180910390fd5b6100b48161014560201b60201c565b506001808190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506102d6565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102398261020e565b9050919050565b6102498161022e565b811461025457600080fd5b50565b60008151905061026681610240565b92915050565b6000806040838503121561028357610282610209565b5b600061029185828601610257565b92505060206102a285828601610257565b9150509250929050565b6102b58161022e565b82525050565b60006020820190506102d060008301846102ac565b92915050565b61139c806102e56000396000f3fe6080604052600436106100a75760003560e01c80636db15b10116100645780636db15b10146101b1578063715018a6146101da5780638da5cb5b146101f1578063b0eefabe1461021c578063b2d8364514610245578063f2fde38b1461026e576100a7565b80630ff7340a146100ac5780631839a5a3146100c857806336f956701461010957806360b2e6d91461013257806365d65e861461015b5780636cc6cde114610186575b600080fd5b6100c660048036038101906100c19190611108565b610297565b005b3480156100d457600080fd5b506100ef60048036038101906100ea9190611148565b6104db565b6040516101009594939291906111b8565b60405180910390f35b34801561011557600080fd5b50610130600480360381019061012b919061120b565b61056b565b005b34801561013e57600080fd5b5061015960048036038101906101549190611264565b6105b7565b005b34801561016757600080fd5b5061017061088f565b60405161017d91906112a4565b60405180910390f35b34801561019257600080fd5b5061019b6108b5565b6040516101a891906112a4565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190611264565b6108db565b005b3480156101e657600080fd5b506101ef610b87565b005b3480156101fd57600080fd5b50610206610b9b565b60405161021391906112a4565b60405180910390f35b34801561022857600080fd5b50610243600480360381019061023e919061120b565b610bc4565b005b34801561025157600080fd5b5061026c60048036038101906102679190611148565b610c53565b005b34801561027a57600080fd5b506102956004803603810190610290919061120b565b610e47565b005b61029f610ecd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610305576040517f100d5f7400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000340361033f576040517f100d5f7400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006004600084815260200190815260200160002090508060030160009054906101000a900460ff161561039f576040517fa842ec2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034816002018190555060018160030160006101000a81548160ff02191690831515021790555060008160030160016101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16847f3fb07fb18e80ac4889d1888831a5db8ba136909eae17d247640e82961350ec36346040516104c691906112bf565b60405180910390a4506104d7610f13565b5050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b610573610f1c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6105bf610ecd565b60006004600084815260200190815260200160002090508060030160019054906101000a900460ff161561061f576040517f09dd123600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a6576040517fd625d5c800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160009054906101000a900460ff166106ee576040517f864f9b8500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806002015482111561072c576040517f100d5f7400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082826002015461073e9190611309565b905060008260030160006101000a81548160ff02191690831515021790555060008311156107d2578160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156107d0573d6000803e3d6000fd5b505b6000811115610847578160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610845573d6000803e3d6000fd5b505b837f4c544e37f113e38d43b0ed32661cb5604b8c39e021582ea99e6da040c5b53503848360405161087992919061133d565b60405180910390a2505061088b610f13565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108e3610ecd565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461096a576040517f667f86ef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006004600084815260200190815260200160002090508060030160019054906101000a900460ff166109c9576040517f433b0e1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060020154821115610a07576040517f100d5f7400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828260020154610a199190611309565b905060008260030160006101000a81548160ff02191690831515021790555060008260030160016101000a81548160ff0219169083151502179055506000831115610aca578160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610ac8573d6000803e3d6000fd5b505b6000811115610b3f578160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b3d573d6000803e3d6000fd5b505b837f58a2558343c2558557b34020fdd42da40f54056195b7744918f27e2e19adcc128483604051610b7192919061133d565b60405180910390a25050610b83610f13565b5050565b610b8f610f1c565b610b996000610fa3565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bcc610f1c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fcea58c692fbc9fb8dd2ed0126e9e62c4be5c8d5990b1dfafa05adf2d32927da160405160405180910390a250565b60006004600083815260200190815260200160002090508060030160009054906101000a900460ff16610cb2576040517f864f9b8500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160019054906101000a900460ff1615610cfb576040517f09dd123600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610dab57508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610de2576040517fe438f8ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160030160016101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16827ff6448b883f8363e58cda16a174c0a92f89b1ce96c57e19137feeb8917cc183f660405160405180910390a35050565b610e4f610f1c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ec15760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610eb891906112a4565b60405180910390fd5b610eca81610fa3565b50565b600260015403610f09576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b610f24611067565b73ffffffffffffffffffffffffffffffffffffffff16610f42610b9b565b73ffffffffffffffffffffffffffffffffffffffff1614610fa157610f65611067565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f9891906112a4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b61108781611074565b811461109257600080fd5b50565b6000813590506110a48161107e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110d5826110aa565b9050919050565b6110e5816110ca565b81146110f057600080fd5b50565b600081359050611102816110dc565b92915050565b6000806040838503121561111f5761111e61106f565b5b600061112d85828601611095565b925050602061113e858286016110f3565b9150509250929050565b60006020828403121561115e5761115d61106f565b5b600061116c84828501611095565b91505092915050565b61117e816110ca565b82525050565b6000819050919050565b61119781611184565b82525050565b60008115159050919050565b6111b28161119d565b82525050565b600060a0820190506111cd6000830188611175565b6111da6020830187611175565b6111e7604083018661118e565b6111f460608301856111a9565b61120160808301846111a9565b9695505050505050565b6000602082840312156112215761122061106f565b5b600061122f848285016110f3565b91505092915050565b61124181611184565b811461124c57600080fd5b50565b60008135905061125e81611238565b92915050565b6000806040838503121561127b5761127a61106f565b5b600061128985828601611095565b925050602061129a8582860161124f565b9150509250929050565b60006020820190506112b96000830184611175565b92915050565b60006020820190506112d4600083018461118e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061131482611184565b915061131f83611184565b9250828203905081811115611337576113366112da565b5b92915050565b6000604082019050611352600083018561118e565b61135f602083018461118e565b939250505056fea26469706673582212200a05617677705b10e6239a3ab081723290bc71753726f7cde1cc98291cfa44d564736f6c63430008190033";

type TrustDepositConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrustDepositConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TrustDeposit__factory extends ContractFactory {
  constructor(...args: TrustDepositConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _backendSigner: AddressLike,
    _arbitrator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _backendSigner,
      _arbitrator,
      overrides || {}
    );
  }
  override deploy(
    _backendSigner: AddressLike,
    _arbitrator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _backendSigner,
      _arbitrator,
      overrides || {}
    ) as Promise<
      TrustDeposit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TrustDeposit__factory {
    return super.connect(runner) as TrustDeposit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrustDepositInterface {
    return new Interface(_abi) as TrustDepositInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TrustDeposit {
    return new Contract(address, _abi, runner) as unknown as TrustDeposit;
  }
}
